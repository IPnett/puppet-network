###
### File managed by Puppet
###
DEVICE=<%= @interface %>
BOOTPROTO=<%= @bootproto %>
ONBOOT=<%= @onboot %>
HOTPLUG=<%= @onboot %>
# ensure we only bring this up when
# bridges, bonds and vlans are up.
TYPE=IPSEC
<% if @phy and @phy != '' %>PHY=<%= @phy %>
<% end -%>
<% if @vrf and @vrf != '' %>VRF=<%= @vrf %>
<% end -%>
<% if @vlanyes %>VLAN=<%= @vlanyes %>
<% end -%>
<% if @ipaddress and @ipaddress != '' %>IPADDR=<%= @ipaddress %>
<% end -%>
<% if @netmask and @netmask != '' %>NETMASK=<%= @netmask %>
<% end -%>
<% if @gateway and @gateway != '' %>GATEWAY=<%= @gateway %>
<% end -%>
<% if @mtu %>MTU=<%= @mtu %>
<% end -%>
<% if @bonding_opts %>BONDING_OPTS="<%= @bonding_opts %>"
<% end -%>
<% if @dhcp_hostname %>DHCP_HOSTNAME="<%= @dhcp_hostname %>"
<% end -%>
<% if @ethtool_opts %>ETHTOOL_OPTS="<%= @ethtool_opts %>"
<% end -%>
<% if !@peerdns %>PEERDNS=no
<% else %>PEERDNS=yes
<% if @dns1_real %>DNS1=<%= @dns1_real %>
<% end -%>
<% if @dns2_real %>DNS2=<%= @dns2_real %>
<% end -%>
<% if @domain %>DOMAIN="<%= @domain %>"
<% end -%>
<% end -%>
<% if @userctl %>USERCTL=yes
<% end -%>
<% if @ipv6init %>
IPV6INIT=yes
<% if !@ipv6autoconf %>IPV6_AUTOCONF=no
<% else %>IPV6_AUTOCONF=yes
<% end -%>
<% if @ipv6address %>IPV6ADDR=<%= @ipv6address %>
<% end -%>
<% if @ipv6gateway %>IPV6_DEFAULTGW=<%= @ipv6gateway %>
<% end -%>
<% if !@ipv6peerdns %>IPV6_PEERDNS=no
<% else %>IPV6_PEERDNS=yes
<% end -%>
<% end -%>
<% if @bridge %>BRIDGE=<%= @bridge %>
<% end -%>
<% if @linkdelay %>LINKDELAY=<%= @linkdelay %>
<% end -%>
<% if @scope %>SCOPE="<%= @scope %>"
<% end -%>
<% if @check_link_down %>
check_link_down() {
 return 1;
}
<% end -%>
<% if @defroute %>DEFROUTE=<%= @defroute %>
<% end -%>
<% if @zone %>ZONE=<%= @zone %>
<% end -%>
<% if @metric %>METRIC=<%= @metric %>
<% end -%>
NM_CONTROLLED=no

# pre-script:
# reverse-engineering of EL sysvinit network scripts give right here we can
# execute a pre-script, by matching the conditions below.
# This file is sourced several times by the various ifup/down scripts,
# but the below conditions single out when ifup[-*] is executing it.
# We are then self-sufficient on vhost-bringup here, without any other
# external modification required.
# Regular ifup-eth comes along and configures regular ifcfg-$dev -given
# IP addressing etc, after this config file has been executed.
if [ -n "$BASH_SOURCE" -a ${#BASH_SOURCE[@]} = 3 -a `echo ${BASH_SOURCE[2]} | grep -c 'ifup'` = 1 ]; then
	echo "We're coming up!"
	if [ -f /sys/class/net/${PHY}/address ]; then
		mac=`cat /sys/class/net/${PHY}/address`
	else
		echo "fatal: physical interface ${PHY} does not exist"
		exit 1
	fi
	# load vrouter if needed
	if ! lsmod | grep -q ^vrouter; then
		echo "loading vrouter, trying insmod"
		insmod `rpm -ql contrail-vrouter | grep vrouter.ko`
	fi

	if ! lsmod | grep -q ^vrouter; then
		echo "fatal: vrouter not loaded"
		exit 1
	fi

	if [ -z "$VRF" ]; then
		VRF=0
	fi
	vif --create $DEVICE --mac $mac
	vif --add $PHY    --mac $mac --vrf $VRF --type physical --vhost-phys
	vif --add $DEVICE --mac $mac --vrf $VRF --type vhost    --xconnect $PHY
fi
